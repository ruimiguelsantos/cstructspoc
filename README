# Dependencies
# graphviz (dot tool)
# gcc

# current lib contents
- int static stack (/Stack/stack_stat.c/h)
- int dynamic stack (/Stack/stack_dyn.c/h)
- int static queue (/Queue/queue_stat.c/h)
- int dynamic queue (/Queue/queue_dyn.c/h)
- int min heap (/Heap/minheap.c/h)
- int binary search tree (/Btree/btree.c/h)
- int  AVL tree (Adelson-Velskii and Landis) (/AVL/avl.c/h)
- int hash table (open addressing with quadratic probing) (/HashTable/open_addressing.c/h)
- int hash table (closed addressing with linked lists) (/HashTable/closed_addressing.c/h)
- int adjacency list graph (/Graph/adj_list.c/h)
- int adjacency matrix graph (/Graph/adj_matrix.c/h)
- int adjacency arrays graph (/Graph/adj_vector.c/h)

# Demos usage
- make [arg] (compile test & lib)
args:
make ss -- compile static stack (ss) test > ss_test
make ds -- compile dynamic stack (ds) test > ds_test
make sq -- compile static queue (sq) test > sq_test
make dq -- compile dynamic queue (dq) test > dq_test
make mh -- compile min heap (mh) test > mh_test
make bt -- compile binary tree (bt) test > bt_test
make at -- compile avl tree (at) test > at_test
make hoa -- compile hashtable with open addressing (hoa) test > hoa_test
make hca -- compile hashtable with closed addressing (hca) test > hca_test
make gr -- compile graph demo test > gr_test
make clean -- rm all *.o & bins (tests & libs)